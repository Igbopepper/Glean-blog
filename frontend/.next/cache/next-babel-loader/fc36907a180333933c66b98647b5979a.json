{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { defaults } from \"./constants\";\nexport function getStrapiURL() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return \"\".concat(defaults.baseUrl || \"http://localhost:1338\").concat(path);\n} // Helper to make GET requests to Strapi\n\nexport function fetchAPI(_x) {\n  return _fetchAPI.apply(this, arguments);\n}\n\nfunction _fetchAPI() {\n  _fetchAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"http://localhost:1338/\".concat(path));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchAPI.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/ndonna/Documents/Next JS/glean/frontend/lib/api.js"],"names":["defaults","getStrapiURL","path","baseUrl","fetchAPI","fetch","response","json","data"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,OAAO,SAASC,YAAT,GAAiC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AACtC,mBAAUF,QAAQ,CAACG,OAAT,IAAoB,uBAA9B,SAAwDD,IAAxD;AACD,C,CAED;;AACA,gBAAsBE,QAAtB;AAAA;AAAA;;;uEAAO,iBAAwBF,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBG,KAAK,iCAA0BH,IAA1B,EADvB;;AAAA;AACCI,YAAAA,QADD;AAAA;AAAA,mBAEcA,QAAQ,CAACC,IAAT,EAFd;;AAAA;AAECC,YAAAA,IAFD;AAAA,6CAGEA,IAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { defaults } from \"./constants\"\n\nexport function getStrapiURL(path = \"\") {\n  return `${defaults.baseUrl || \"http://localhost:1338\"}${path}`\n}\n\n// Helper to make GET requests to Strapi\nexport async function fetchAPI(path) {\n  const response = await fetch(`http://localhost:1338/${path}`)\n  const data = await response.json()\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}